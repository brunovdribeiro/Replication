// See https://aka.ms/new-console-template for more information

using System.Text.Json;
using Replication.Connections;
using Replication.Mappers.Authors;
using Replication.Mappers.Books;
using Replication.Subscriptions;
using Replication.Subscriptions.Mappers;
using Replication.Subscriptions.Models;
using Replication.Subscriptions.Settings;

const string connectionString =
    "PORT = 5432; HOST = localhost; TIMEOUT = 15; MINPOOLSIZE = 1; MAXPOOLSIZE = 100; COMMANDTIMEOUT = 20; Include Error Detail=True; DATABASE = 'postgres'; PASSWORD = 'rep_pwd'; USER ID = 'rep_user';";

var cancellationToken = new CancellationToken();
const string slot = "replica_slot";
const string publication = "replica_publication";
var connection = new ReplicationConnection(connectionString);
var subscriptionSettings = new SubscriptionSettings(slot, publication);

var mappers = new List<IMessageMapper<Tracking>>
{
    new AuthorInsertMapping(),
    new BookInsertMapping()
};

var subscription = new PgOutputSubscription<Tracking>(connection, mappers);

await foreach (var message in subscription.Subscribe(subscriptionSettings, cancellationToken))
    Console.WriteLine(
        $"This {JsonSerializer.Serialize(await message)} was the message generated by replica service");

Console.WriteLine("End Application");